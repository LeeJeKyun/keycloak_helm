apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.deployments.keycloak.service.name }}"
  namespace: "{{ .Values.namespace }}"
  labels:
    app: "{{ .Values.deployments.keycloak.service.name }}"
spec:
  ports:
    - name: https
      nodePort: {{ .Values.deployments.keycloak.service.nodePort }}
      port: {{ .Values.deployments.securePort }}
      targetPort: {{ .Values.deployments.keycloak.ports.accessPort }}
  selector:
    app: "{{ .Values.deployments.keycloak.service.name }}"
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.deployments.keycloak.service.name }}"
  namespace: "{{ .Values.namespace }}"
  labels:
    app: "{{ .Values.deployments.keycloak.service.name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.deployments.keycloak.service.name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.deployments.keycloak.service.name }}"
    spec:
      containers:
        - name: "{{ .Values.deployments.keycloak.service.name }}"
          image: "{{ .Values.deployments.keycloak.container.image }}"
          args:
            - "start"
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  key: KEYCLOAK_ADMIN
                  name: "{{ .Values.secrets.keycloak.name }}"
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: KEYCLOAK_ADMIN_PASSWORD
                  name: "{{ .Values.secrets.keycloak.name }}"
            - name: KC_HTTPS_KEY_STORE_PASSWORD
              value: "secret"
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_PROXY
              value: "edge"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_METRICS_ENABLED
              value: "true"
            - name: KC_HOSTNAME_STRICT_HTTPS
              value: "false"
            - name: KC_LOG_LEVEL
              value: INFO
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL
              value: "jdbc:postgresql://{{ .Values.deployments.postgres.service.name }}/{{ .Values.deployments.postgres.db.name }}"
            - name: KC_DB_USERNAME
              value: "{{ .Values.secrets.postgres.admin.name }}"
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.secrets.postgres.name }}"
                  key: POSTGRES_PASSWORD
          ports:
            - name: https
              containerPort:
                {{.Values.deployments.keycloak.ports.accessPort}}
          readinessProbe:
            httpGet:
              path: /health/ready
              port: {{.Values.deployments.keycloak.ports.containerPort}}
            initialDelaySeconds: 250
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health/live
              port: {{.Values.deployments.keycloak.ports.containerPort}}
            initialDelaySeconds: 500
            periodSeconds: 30
          resources:
            limits:
              memory: 1024Mi
              cpu: "2"
            requests:
              memory: 512Mi
              cpu: "0.6"
